import { PrismaClient } from '@prisma/client';
const prisma = new PrismaClient();

async function main() {
  // Xóa toàn bộ dữ liệu cũ đúng thứ tự (liên kết trước, rồi options, rồi items)
  if (prisma.quizAttempt) {
    await prisma.quizAttempt.deleteMany({});
  }
  if (prisma.quizTemplate) {
    await prisma.quizTemplate.deleteMany({});
  }
  if (prisma.questionSetQuestion) {
    await prisma.questionSetQuestion.deleteMany({});
  }
  if (prisma.questionSet) {
    await prisma.questionSet.deleteMany({});
  }
  await prisma.questionOption.deleteMany({});
  await prisma.questionItem.deleteMany({});
  // Đảm bảo xóa xong mới seed tiếp

  // Chỉ giữ lại các câu hỏi liên quan đến skill 'React'
  const questions = [
    // Frontend
    {
      type: 'single_choice',
      stem: 'Component trong React là gì?',
      explanation: 'Component là khối giao diện độc lập, có thể tái sử dụng.',
      level: 'junior',
      topics: ['React', 'Component'],
      fields: ['Software Development'],
      skills: ['React'],
      category: 'Software Development',
      tags: ['react', 'component', 'ui'],
      estimatedTime: 30,
      sourceAuthor: 'AI Seed',
      version: 1,
      isArchived: false,
      difficulty: 'easy',
      options: [
        { text: 'Khối giao diện độc lập', isCorrect: true },
        { text: 'Câu lệnh điều kiện', isCorrect: false },
        { text: 'Hàm xử lý sự kiện', isCorrect: false },
        { text: 'Biến toàn cục', isCorrect: false },
      ],
    },
    {
      type: 'multiple_choice',
      stem: 'Những framework frontend phổ biến?',
      explanation: 'React, Vue, Angular là các framework phổ biến.',
      level: 'middle',
      topics: ['Frontend', 'Framework'],
      fields: ['Software Development'],
      skills: ['React', 'Vue', 'Angular'],
      category: 'Software Development',
      tags: ['framework', 'react', 'vue', 'angular'],
      estimatedTime: 45,
      sourceAuthor: 'AI Seed',
      version: 1,
      isArchived: false,
      difficulty: 'medium',
      options: [
        { text: 'React', isCorrect: true },
        { text: 'Vue', isCorrect: true },
        { text: 'Angular', isCorrect: true },
        { text: 'Django', isCorrect: false },
      ],
    },
    // React Hooks
    {
      type: 'single_choice',
      stem: 'useState hook được sử dụng để làm gì?',
      explanation: 'useState hook được sử dụng để quản lý state trong functional components.',
      level: 'junior',
      topics: ['React', 'Hooks', 'useState'],
      fields: ['Software Development'],
      skills: ['React', 'Hooks'],
      category: 'Software Development',
      tags: ['react', 'hooks', 'usestate', 'state management'],
      estimatedTime: 30,
      sourceAuthor: 'AI Seed',
      version: 1,
      isArchived: false,
      difficulty: 'easy',
      options: [
        { text: 'Quản lý state trong functional components', isCorrect: true },
        { text: 'Tạo class components', isCorrect: false },
        { text: 'Gọi API', isCorrect: false },
        { text: 'Định nghĩa CSS', isCorrect: false },
      ],
    },
    {
      type: 'multiple_choice',
      stem: 'Những React Hooks phổ biến?',
      explanation: 'useState, useEffect, useContext, useReducer là những hooks phổ biến trong React.',
      level: 'middle',
      topics: ['React', 'Hooks'],
      fields: ['Software Development'],
      skills: ['React', 'Hooks'],
      category: 'Software Development',
      tags: ['react', 'hooks', 'usestate', 'useeffect', 'usecontext', 'usereducer'],
      estimatedTime: 45,
      sourceAuthor: 'AI Seed',
      version: 1,
      isArchived: false,
      difficulty: 'medium',
      options: [
        { text: 'useState', isCorrect: true },
        { text: 'useEffect', isCorrect: true },
        { text: 'useContext', isCorrect: true },
        { text: 'useHTML', isCorrect: false },
      ],
    },
    {
      type: 'single_choice',
      stem: 'useEffect hook chạy khi nào?',
      explanation: 'useEffect chạy sau khi component render và có thể cấu hình dependency array.',
      level: 'middle',
      topics: ['React', 'Hooks', 'useEffect'],
      fields: ['Software Development'],
      skills: ['React', 'Hooks'],
      category: 'Software Development',
      tags: ['react', 'hooks', 'useeffect', 'lifecycle'],
      estimatedTime: 45,
      sourceAuthor: 'AI Seed',
      version: 1,
      isArchived: false,
      difficulty: 'medium',
      options: [
        { text: 'Sau khi component render', isCorrect: true },
        { text: 'Trước khi component render', isCorrect: false },
        { text: 'Chỉ khi component mount', isCorrect: false },
        { text: 'Khi có lỗi xảy ra', isCorrect: false },
      ],
    },
    // React JSX
    {
      type: 'single_choice',
      stem: 'JSX là gì trong React?',
      explanation: 'JSX là syntax extension cho JavaScript, cho phép viết HTML-like code trong React.',
      level: 'junior',
      topics: ['React', 'JSX'],
      fields: ['Software Development'],
      skills: ['React', 'JSX'],
      category: 'Software Development',
      tags: ['react', 'jsx', 'syntax'],
      estimatedTime: 30,
      sourceAuthor: 'AI Seed',
      version: 1,
      isArchived: false,
      difficulty: 'easy',
      options: [
        { text: 'Syntax extension cho JavaScript', isCorrect: true },
        { text: 'Thư viện CSS', isCorrect: false },
        { text: 'Database', isCorrect: false },
        { text: 'Server framework', isCorrect: false },
      ],
    },
    {
      type: 'multiple_choice',
      stem: 'Quy tắc viết JSX nào sau đây đúng?',
      explanation: 'JSX phải có một root element, className thay vì class, và tự đóng thẻ.',
      level: 'middle',
      topics: ['React', 'JSX'],
      fields: ['Software Development'],
      skills: ['React', 'JSX'],
      category: 'Software Development',
      tags: ['react', 'jsx', 'rules', 'syntax'],
      estimatedTime: 45,
      sourceAuthor: 'AI Seed',
      version: 1,
      isArchived: false,
      difficulty: 'medium',
      options: [
        { text: 'Phải có một root element', isCorrect: true },
        { text: 'Sử dụng className thay vì class', isCorrect: true },
        { text: 'Tự đóng thẻ với />', isCorrect: true },
        { text: 'Sử dụng for thay vì htmlFor', isCorrect: false },
      ],
    },
    // React Props
    {
      type: 'single_choice',
      stem: 'Props trong React là gì?',
      explanation: 'Props là cách truyền dữ liệu từ component cha xuống component con.',
      level: 'junior',
      topics: ['React', 'Props'],
      fields: ['Software Development'],
      skills: ['React'],
      category: 'Software Development',
      tags: ['react', 'props', 'data passing'],
      estimatedTime: 30,
      sourceAuthor: 'AI Seed',
      version: 1,
      isArchived: false,
      difficulty: 'easy',
      options: [
        { text: 'Cách truyền dữ liệu từ cha xuống con', isCorrect: true },
        { text: 'Cách lưu trữ state', isCorrect: false },
        { text: 'Phương thức gọi API', isCorrect: false },
        { text: 'Cách định nghĩa CSS', isCorrect: false },
      ],
    },
    {
      type: 'single_choice',
      stem: 'Props trong React có thể thay đổi được không?',
      explanation: 'Props là read-only, không thể thay đổi từ component con.',
      level: 'junior',
      topics: ['React', 'Props'],
      fields: ['Software Development'],
      skills: ['React'],
      category: 'Software Development',
      tags: ['react', 'props', 'immutable'],
      estimatedTime: 30,
      sourceAuthor: 'AI Seed',
      version: 1,
      isArchived: false,
      difficulty: 'easy',
      options: [
        { text: 'Không, props là read-only', isCorrect: true },
        { text: 'Có, có thể thay đổi tự do', isCorrect: false },
        { text: 'Chỉ thay đổi với setState', isCorrect: false },
        { text: 'Chỉ thay đổi với useEffect', isCorrect: false },
      ],
    },
    // React State Management
    {
      type: 'single_choice',
      stem: 'State trong React là gì?',
      explanation: 'State là dữ liệu nội bộ của component, có thể thay đổi theo thời gian.',
      level: 'junior',
      topics: ['React', 'State'],
      fields: ['Software Development'],
      skills: ['React'],
      category: 'Software Development',
      tags: ['react', 'state', 'data management'],
      estimatedTime: 30,
      sourceAuthor: 'AI Seed',
      version: 1,
      isArchived: false,
      difficulty: 'easy',
      options: [
        { text: 'Dữ liệu nội bộ của component', isCorrect: true },
        { text: 'Dữ liệu từ API', isCorrect: false },
        { text: 'CSS styles', isCorrect: false },
        { text: 'HTML elements', isCorrect: false },
      ],
    },
    {
      type: 'multiple_choice',
      stem: 'Cách nào để quản lý state trong React?',
      explanation: 'useState hook, useReducer hook, và class component setState là cách quản lý state.',
      level: 'middle',
      topics: ['React', 'State Management'],
      fields: ['Software Development'],
      skills: ['React', 'State Management'],
      category: 'Software Development',
      tags: ['react', 'state', 'usestate', 'usereducer', 'setstate'],
      estimatedTime: 45,
      sourceAuthor: 'AI Seed',
      version: 1,
      isArchived: false,
      difficulty: 'medium',
      options: [
        { text: 'useState hook', isCorrect: true },
        { text: 'useReducer hook', isCorrect: true },
        { text: 'setState trong class component', isCorrect: true },
        { text: 'localStorage', isCorrect: false },
      ],
    },
    // React Events
    {
      type: 'single_choice',
      stem: 'Event handling trong React có gì khác biệt?',
      explanation: 'React sử dụng SyntheticEvent để chuẩn hóa events trên các browser.',
      level: 'middle',
      topics: ['React', 'Events'],
      fields: ['Software Development'],
      skills: ['React'],
      category: 'Software Development',
      tags: ['react', 'events', 'syntheticevent'],
      estimatedTime: 45,
      sourceAuthor: 'AI Seed',
      version: 1,
      isArchived: false,
      difficulty: 'medium',
      options: [
        { text: 'Sử dụng SyntheticEvent', isCorrect: true },
        { text: 'Giống hệt DOM events', isCorrect: false },
        { text: 'Không hỗ trợ events', isCorrect: false },
        { text: 'Chỉ hỗ trợ click events', isCorrect: false },
      ],
    },
    {
      type: 'multiple_choice',
      stem: 'Cách viết event handler nào đúng trong React?',
      explanation: 'onClick={handleClick}, onSubmit={handleSubmit} là cách viết đúng.',
      level: 'junior',
      topics: ['React', 'Events'],
      fields: ['Software Development'],
      skills: ['React'],
      category: 'Software Development',
      tags: ['react', 'events', 'onclick', 'onsubmit'],
      estimatedTime: 30,
      sourceAuthor: 'AI Seed',
      version: 1,
      isArchived: false,
      difficulty: 'easy',
      options: [
        { text: 'onClick={handleClick}', isCorrect: true },
        { text: 'onSubmit={handleSubmit}', isCorrect: true },
        { text: 'onChange={handleChange}', isCorrect: true },
        { text: 'onclick="handleClick()"', isCorrect: false },
      ],
    },
    // React Performance
    {
      type: 'single_choice',
      stem: 'React.memo được sử dụng để làm gì?',
      explanation: 'React.memo được sử dụng để tối ưu performance bằng cách memoize component.',
      level: 'senior',
      topics: ['React', 'Performance'],
      fields: ['Software Development'],
      skills: ['React', 'Performance'],
      category: 'Software Development',
      tags: ['react', 'performance', 'memo', 'optimization'],
      estimatedTime: 60,
      sourceAuthor: 'AI Seed',
      version: 1,
      isArchived: false,
      difficulty: 'hard',
      options: [
        { text: 'Tối ưu performance bằng memoization', isCorrect: true },
        { text: 'Tạo class component', isCorrect: false },
        { text: 'Quản lý state', isCorrect: false },
        { text: 'Gọi API', isCorrect: false },
      ],
    },
    {
      type: 'multiple_choice',
      stem: 'Các kỹ thuật tối ưu performance trong React?',
      explanation: 'useMemo, useCallback, React.memo, lazy loading là các kỹ thuật tối ưu.',
      level: 'senior',
      topics: ['React', 'Performance'],
      fields: ['Software Development'],
      skills: ['React', 'Performance'],
      category: 'Software Development',
      tags: ['react', 'performance', 'usememo', 'usecallback', 'lazy'],
      estimatedTime: 60,
      sourceAuthor: 'AI Seed',
      version: 1,
      isArchived: false,
      difficulty: 'hard',
      options: [
        { text: 'useMemo', isCorrect: true },
        { text: 'useCallback', isCorrect: true },
        { text: 'React.memo', isCorrect: true },
        { text: 'useState', isCorrect: false },
      ],
    },
    // React Router
    {
      type: 'single_choice',
      stem: 'React Router được sử dụng để làm gì?',
      explanation: 'React Router được sử dụng để xử lý routing trong Single Page Application.',
      level: 'middle',
      topics: ['React', 'Router'],
      fields: ['Software Development'],
      skills: ['React', 'React Router'],
      category: 'Software Development',
      tags: ['react', 'router', 'spa', 'navigation'],
      estimatedTime: 45,
      sourceAuthor: 'AI Seed',
      version: 1,
      isArchived: false,
      difficulty: 'medium',
      options: [
        { text: 'Xử lý routing trong SPA', isCorrect: true },
        { text: 'Quản lý state', isCorrect: false },
        { text: 'Gọi API', isCorrect: false },
        { text: 'Tạo animations', isCorrect: false },
      ],
    },
    {
      type: 'multiple_choice',
      stem: 'Các component chính của React Router?',
      explanation: 'BrowserRouter, Route, Link, Switch/Routes là các component chính.',
      level: 'middle',
      topics: ['React', 'Router'],
      fields: ['Software Development'],
      skills: ['React', 'React Router'],
      category: 'Software Development',
      tags: ['react', 'router', 'browserrouter', 'route', 'link'],
      estimatedTime: 45,
      sourceAuthor: 'AI Seed',
      version: 1,
      isArchived: false,
      difficulty: 'medium',
      options: [
        { text: 'BrowserRouter', isCorrect: true },
        { text: 'Route', isCorrect: true },
        { text: 'Link', isCorrect: true },
        { text: 'Component', isCorrect: false },
      ],
    },
    // React Context
    {
      type: 'single_choice',
      stem: 'React Context được sử dụng khi nào?',
      explanation: 'React Context được sử dụng để chia sẻ dữ liệu giữa nhiều component mà không cần props drilling.',
      level: 'middle',
      topics: ['React', 'Context'],
      fields: ['Software Development'],
      skills: ['React', 'Context API'],
      category: 'Software Development',
      tags: ['react', 'context', 'props drilling', 'state sharing'],
      estimatedTime: 45,
      sourceAuthor: 'AI Seed',
      version: 1,
      isArchived: false,
      difficulty: 'medium',
      options: [
        { text: 'Chia sẻ dữ liệu mà không cần props drilling', isCorrect: true },
        { text: 'Tạo animations', isCorrect: false },
        { text: 'Gọi API', isCorrect: false },
        { text: 'Xử lý forms', isCorrect: false },
      ],
    },
    {
      type: 'multiple_choice',
      stem: 'Các bước tạo React Context?',
      explanation: 'Tạo Context với createContext, Provider để cung cấp dữ liệu, Consumer/useContext để sử dụng.',
      level: 'senior',
      topics: ['React', 'Context'],
      fields: ['Software Development  '],
      skills: ['React', 'Context API'],
      category: 'Software Development',
      tags: ['react', 'context', 'createcontext', 'provider', 'usecontext'],
      estimatedTime: 60,
      sourceAuthor: 'AI Seed',
      version: 1,
      isArchived: false,
      difficulty: 'hard',
      options: [
        { text: 'Tạo Context với createContext', isCorrect: true },
        { text: 'Sử dụng Provider để cung cấp dữ liệu', isCorrect: true },
        { text: 'Dùng useContext để consume', isCorrect: true },
        { text: 'Sử dụng useState để lưu trữ', isCorrect: false },
      ],
    },
    // React Testing
    {
      type: 'single_choice',
      stem: 'React Testing Library tập trung vào gì?',
      explanation: 'React Testing Library tập trung vào testing behavior thay vì implementation details.',
      level: 'senior',
      topics: ['React', 'Testing'],
      fields: ['Software Development'],
      skills: ['React', 'Testing'],
      category: 'Software Development',
      tags: ['react', 'testing', 'react testing library', 'behavior'],
      estimatedTime: 60,
      sourceAuthor: 'AI Seed',
      version: 1,
      isArchived: false,
      difficulty: 'hard',
      options: [
        { text: 'Testing behavior thay vì implementation', isCorrect: true },
        { text: 'Testing implementation details', isCorrect: false },
        { text: 'Testing CSS styles', isCorrect: false },
        { text: 'Testing performance', isCorrect: false },
      ],
    },
  ];

  for (const q of questions) {
    await prisma.questionItem.create({
      data: {
        type: q.type ?? 'single_choice',
        stem: q.stem ?? '',
        explanation: q.explanation ?? '',
        level: q.level ?? 'junior',
        topics: q.topics ?? [],
        fields: q.fields ?? [],
        skills: q.skills ?? [],
        category: q.category ?? 'General',
        tags: q.tags ?? [],
        estimatedTime: q.estimatedTime ?? 30,
        sourceAuthor: q.sourceAuthor ?? 'AI Seed',
        version: q.version ?? 1,
        isArchived: q.isArchived ?? false,
        difficulty: q.difficulty ?? 'easy',
        options: {
          create: (q.options ?? []).map((opt, idx) => ({
            text: opt.text ?? '',
            isCorrect: opt.isCorrect ?? false,
            order: idx + 1,
          })),
        },
      },
    });
  }

  console.log('Seeded only React skill questions successfully!');
}

main().catch((e) => {
  console.error(e);
  process.exit(1);
}).finally(() => prisma.$disconnect());
